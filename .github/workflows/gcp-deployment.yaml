name: Build and Deploy to GCE VM

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCE_INSTANCE: ${{ secrets.GCE_INSTANCE_NAME }}
  GCE_ZONE: ${{ secrets.GCE_ZONE }}
  ARTIFACT_REPO: budgetmanager # Nama repo di Artifact Registry
  SERVICE_NAME: budgetmanager-be # Nama image/service Anda
  REGION: asia-southeast2      # Region Artifact Registry

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Docker image
        run: |-
          IMAGE_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE_NAME }}:${{ github.sha }}"
          docker build -t $IMAGE_TAG -f Dockerfile.app .
          docker push $IMAGE_TAG

      - name: Deploy to GCE VM
        id: deploy
        uses: 'google-github-actions/ssh-compute@v1'
        with:
          instance_name: ${{ env.GCE_INSTANCE }}
          zone: ${{ env.GCE_ZONE }}
          command: |
            # Pindah ke direktori aplikasi di VM
            cd /home/$USER/app
            
            # Update file docker-compose.yml dengan tag image yang baru
            # sed akan mencari baris yang mengandung 'image:' di bawah 'go-backend:' dan menggantinya
            sed -i "/go-backend:/,/image:/s|image:.*|image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE_NAME }}:${{ github.sha }}|" docker-compose.yml
            
            # Login ke Artifact Registry dari dalam VM
            gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
            
            # Tarik (pull) image baru untuk service go-backend
            docker-compose pull go-backend
            
            # Mulai ulang service go-backend dengan image baru, tanpa menyentuh database
            docker-compose up -d --no-deps go-backend
            
            # Hapus image lama yang tidak terpakai untuk menghemat ruang
            docker image prune -af
